# Default values for ibm-powervs-block-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: k8s.gcr.io/cloud-provider-ibm/ibm-powervs-block-csi-driver
  # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
  tag: "v0.2.0"
  pullPolicy: IfNotPresent

# -- Custom labels to add into metadata
customLabels:
  {}
  # k8s-app: ibm-powervs-block-csi-driver

sidecars:
  nodeUpdateController:
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/cloud-provider-ibm/ibm-powervs-block-csi-driver
      tag: "v0.2.0"
    enableMetrics: true
    env: []
    envFrom: []
  provisioner:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/sig-storage/csi-provisioner
      tag: "v3.1.0"
    logLevel: 2
    resources: {}
    # Tune leader lease election for csi-provisioner.
    # Leader election is on by default.
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
  attacher:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/sig-storage/csi-attacher
      tag: "v3.4.0"
    # Tune leader lease election for csi-attacher.
    # Leader election is on by default.
    leaderElection:
      enabled: true
      # Optional values to tune lease behavior.
      # The arguments provided must be in an acceptable time.ParseDuration format.
      # Ref: https://pkg.go.dev/flag#Duration
      # leaseDuration: "15s"
      # renewDeadline: "10s"
      # retryPeriod: "5s"
    logLevel: 2
    resources: {}
  livenessProbe:
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/sig-storage/livenessprobe
      tag: "v2.6.0"
    resources: {}
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
  resizer:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/sig-storage/csi-resizer
      tag: "v1.4.0"
    logLevel: 2
    resources: {}
  nodeDriverRegistrar:
    env: []
    image:
      pullPolicy: IfNotPresent
      repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
      tag: "v2.5.1"
    logLevel: 5
    resources: {}

nameOverride:
fullnameOverride:

controller:
  additionalArgs: []
  affinity:
  # The default filesystem type of the volume to provision when fstype is unspecified in the StorageClass.
  # If the default is not set and fstype is unset in the StorageClass, then no fstype will be set
  env: []
  # Use envFrom to reference ConfigMaps and Secrets across all containers in the deployment
  envFrom: []
  # If set, add pv/pvc metadata to plugin create requests as parameters.
  extraCreateMetadata: false
  httpEndpoint:
  # (deprecated) The TCP network address where the prometheus metrics endpoint
  # will run (example: `:8080` which corresponds to port 8080 on local host).
  # The default is empty string, which means metrics endpoint is disabled.
  # ---
  enableMetrics: false
  logLevel: 2
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  priorityClassName: system-cluster-critical
  replicaCount: 2
  updateStrategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 0
  #   maxUnavailable: 1
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # Note that you will need to set resource requests if you want the cluster autoscaler to
  # scale your nodes when you increase/decrease the number of powervs-csi-controller replicas.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  serviceAccount:
    create: true # A service account will be created for you if set to true. Set to false if you want to use your own.
    name: powervs-csi-controller-sa # Name of the service-account to be used/created.
    annotations: {}
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300

node:
  env: []
  envFrom: []
  kubeletPath: /var/lib/kubelet
  logLevel: 2
  priorityClassName:
  affinity:
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  tolerateAllTaints: true
  tolerations:
  - operator: Exists
    effect: NoExecute
    tolerationSeconds: 300
  resources: {}
  serviceAccount:
    create: true
    name: powervs-csi-node-sa
    annotations: {}
  # The "maximum number of attachable volumes" per node
  volumeAttachLimit:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"
